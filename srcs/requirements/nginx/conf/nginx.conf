listen 443 ssl;
listen [::]:443 ssl;

server_name yoo-lee.42.tokyo;
ssl_certificate		/etc/nginx/ssl/yoo-lee.crt
ssl_certificate_key		/etc/nginx/ssl/yoo-lee.key

ssl_protocols		TLSv1.2 TLSv1.3;

root /var/www/html;
index index.php index.nginx-debian.html

# : この行は、指定されたファイルまたはディレクトリが存在しない場合、3つのフォールバックオプションを試みます。
# $uri は、リクエストされたURIに一致するファイルまたはディレクトリを探します。
# $uri/ は、リクエストされたURIに一致するディレクトリを探し、存在する場合は、そのディレクトリ内のindexファイルを探します。
# /index.php$is_args$args は、最終的には、index.phpファイルを探し、URLクエリストリングを引き継ぎます。
# つまり、この設定は、リクエストされたファイルやディレクトリが存在しない場合、WordPressなどのPHPアプリケーションに転送され、該当するページを表示するために、index.phpファイルが使用されることを意味します。
location /{
	try_files $uri $uri/ /index.php$is_args$args;
}

location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass wordpress:9000; #PHP for wordpress will listen on the port 9000
		fastcgi_index index.php;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
	}
# これは、FastCGIプロセスマネージャを使用してPHPファイルを処理するNGINXウェブサーバーの構成ファイルのスニペットです。

# 各行の概要を以下に示します：

# location ~ \.php$ { : この行は、PHPファイル（拡張子が .php のファイル）に対するリクエストをマッチングするロケーションブロックを開始します。
# fastcgi_split_path_info ^(.+\.php)(/.+)$; : この行は、FastCGIがリクエストのパス情報を処理するように設定します。リクエストを2つの部分に分割します。最初の部分は要求されたPHPファイル（正規表現 (.+\.php) に一致する）、2番目の部分は追加のパス情報です（ (/.+) に一致する）。
# fastcgi_pass wordpress:9000; : この行は、PHPリクエストを処理するFastCGIプロセスを、ポート9000でリッスンしている wordpress というサーバーに送信することを指定します。
# fastcgi_index index.php; : この行は、リクエストにインデックスファイルが指定されていない場合、サーバーが index.php ファイルを探すように指定します。
# include fastcgi_params; : この行は、FastCGIのいくつかの基本的なパラメータを設定する fastcgi_params というファイルを含めます。
# fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; : この行は、FastCGIプロセスの SCRIPT_FILENAME パラメータを設定します。実行されるPHPスクリプトのフルパスを指定します。
# fastcgi_param SCRIPT_NAME $fastcgi_script_name; : この行は、FastCGIプロセスの SCRIPT_NAME パラメータを設定します。パス情報なしで実行されるPHPスクリプトのパスを指定します。